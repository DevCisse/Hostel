@page
@model Hostel.Pages.PaymentModel
@{
}



@Html.AntiForgeryToken()

<div class="row justify-content-md-center">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h4 class="card-title" id="basic-layout-card-center">Payment Details</h4>
                <p>
                    Please Submit the  the form to process your payment
                </p>
            </div>
            <div class="card-content">
                <div class="px-3">
                    <form class="form" id="paymentForm">
                        <div class="form-body">

                            <div class="form-group">
                                <label for="eventRegInput1">Email</label>
                                <input type="email" id="email-address" disabled required class="form-control" value="@Model.Email" />
                            </div>

                            <div class="form-group">
                                <label for="eventRegInput2">Amount</label>
                                <input type="tel" id="amount" value="10000" disabled required class="form-control" />
                            </div>

                            <div class="form-group">
                                <label for="eventRegInput3">First Name</label>
                                <input type="text" id="first-name" class="form-control" value="@Model.FirstName" />
                            </div>

                            <div class="form-group">
                                <label for="eventRegInput4">Lastname</label>
                                <input type="text" id="last-name" class="form-control" value="@Model.LastName" />
                            </div>



                        </div>

                        <div class="form-actions center">
                            <button type="button" class="btn btn-raised btn-warning mr-1">
                                <i class="ft-x"></i> Cancel
                            </button>
                            <button onclick="payWithPaystack()" type="submit" class="btn btn-raised btn-primary">
                                <i class="fa fa-check-square-o"></i> Save
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>



@*<form id="paymentForm" class="col-lg-12 col-sm-3 ">
    <h2 class="text-center">Payment Details</h2>
    <div class="form-group">
        <label for="email">Email Address</label>
        <input type="email" id="email-address" disabled required class="form-control" value="@Model.Email" />
    </div>
    <div class="form-group">
        <label for="amount">Amount</label>
        <input type="tel" id="amount" value="10000" disabled required class="form-control" />
    </div>
    <div class="form-group">
        <label for="first-name">First Name</label>
        <input type="text" id="first-name" class="form-control" value="@Model.FirstName" />
    </div>
    <div class="form-group">
        <label for="last-name">Last Name</label>
        <input type="text" id="last-name" class="form-control" value="@Model.LastName" />
    </div>
    <div class="form-submit">
        <button type="submit" class="btn btn-primary btn-lg btn-block" onclick="payWithPaystack()"> Pay </button>

    </div>
</form*@>


@section scripts{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}


    <script src="https://js.paystack.co/v1/inline.js"></script>


    <script type="text/javascript" language="JavaScript">
        $(document).ready(function () {


            $.ajax({
                type: "GET",
                url: "/Payment?handler=List",
                contentType: "application/json",
                dataType: "json",
                success: function (response) {
                    var dvItems = $("#dvItems");
                    dvItems.empty();
                    $.each(response, function (i, item) {
                        var $tr = $('<li>').append(item).appendTo(dvItems);
                    });
                },
                failure: function (response) {
                    alert(response);
                }
            });

            const paymentForm = document.getElementById('paymentForm');
            paymentForm.addEventListener("submit", payWithPaystack, false);
            var ref = "";
            function payWithPaystack(e) {
                e.preventDefault();
                let handler = PaystackPop.setup({
                    key: 'pk_test_997deb30eb541fdd600281bc38faa8549e139bd6', // Replace with your public key
                    email: document.getElementById("email-address").value,
                    amount: document.getElementById("amount").value * 100,
                    firstname: document.getElementById("first-name").value,
                    lastname: document.getElementById("last-name").value,
                    ref: '' + Math.floor((Math.random() * 1000000000) + 1), // generates a pseudo-unique reference. Please replace with a reference you generated. Or remove the line entirely so our API will generate one for you
                    // label: "Optional string that replaces customer email"
                    onClose: function () {
                        alert('Window closed.');
                    },
                    callback: function (response) {
                        var reference = response.reference;
                        alert('Payment complete! Reference: ' + reference);

                        let message = 'Payment complete! Reference: ' + response.reference;
                        ref = response.reference;
                        var MyRef = response.reference;

                        alert('Hassan it showed' + MyRef);

                        $.ajax({
                            type: "POST",
                            url: "/Payment?handler=Send",
                            beforeSend: function (xhr) {
                                xhr.setRequestHeader("XSRF-TOKEN",
                                    $('input:hidden[name="__RequestVerificationToken"]').val());
                            },
                            data: JSON.stringify({
                                Item1: MyRef

                            }),

                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (response) {
                                var dvItems = $("#dvPostItems");
                                dvItems.empty();
                                $.each(response, function (i, item) {
                                    var $tr = $('<li>').append(item).appendTo(dvItems);
                                });
                            },
                            failure: function (response) {
                                alert(response);
                            }
                        });

                        //$.ajax({
                        //    type: "POST",
                        //    url: '/?handler=OnPostRefId', // Replace YOUR_CUSTOM_HANDLER with your handler.
                        //    contentType: "application/json; charset=utf-8",

                        //    beforeSend: function (xhr) {
                        //        xhr.setRequestHeader("XSRF-TOKEN",
                        //            $('input:hidden[name="__RequestVerificationToken"]').val());
                        //    },

                        //    dataType: "json"
                        //}).done(function (data) {
                        //    console.log(data.result);
                        //})
                    }
                });
                handler.openIframe();
            }
        });
    </script>

}